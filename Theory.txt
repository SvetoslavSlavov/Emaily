Node -> Javascript runtime used to execute
code outside of the browser
Express -> Library that runs in Node runtime.
Has helpers to make dealing with HTTP trafic
easier. (Everything in this library can be done in node only.)

Server on machine on port -> port door looking for trafic
Node and Express on port 5000

Express -> Route Handlers of to responde to incoming requests

Create index.js -> root file of our project

Using common js module (const express = require('express');)
because nodejs runtime only understands them.

System implemented in node js for requiring a shared code
between different files. Common js modules.
We will use it on node side of things.

Module System ES2015 modules node js does not have support for
for it. (import express from 'express';).
We will use it on React side of things.

const app = express(); -> set up configuration that are going
to listen for incomming request that are routed between node and express.
All route handlers will be registered with app object.

Express server

app.get('/', (req, res) => {
    res.send({ hi: 'there' });
});

app -> Express App to register this route handler with
get -> watch for incoming request with this method
'/' -> watch for requests trying to access '/'.(localhost:5000/)
req -> Object representing the incoming request (request)
res -> Object representing the outgoing response (response)
res.send({ hi: 'there' }) -> immediately send some JSON 
back to who ever made this reqest

The request Wants to...
     get -> Get info
     post -> Send info
app, put -> Update all the properties of something
     delete -> Delete something
     patch -> Update one or two properties of something

app.listen(5000);
Instruct express to tell node that it wants to listen for incoming
trafic on port 5000
